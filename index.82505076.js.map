{"mappings":"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","sources":["node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/math.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/layer/BaseImage.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/css.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/renderer/canvas/ImageLayer.js","node_modules/ol/src/layer/Image.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/reproj/Image.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/Image.js","node_modules/ol/src/Image.js","node_modules/ol/src/source/WMSServerType.js","node_modules/ol/src/uri.js","node_modules/ol/src/source/ImageWMS.js","node_modules/ol/src/string.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","main.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*=} opt_target Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean=} opt_managed Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\nimport {toString} from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let div;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!div) {\n          div = document.createElement('div');\n          div.innerHTML = 'M';\n          div.style.margin = '0 !important';\n          div.style.padding = '0 !important';\n          div.style.position = 'absolute !important';\n          div.style.left = '-99999px !important';\n        }\n        div.style.font = fontSpec;\n        document.body.appendChild(div);\n        height = div.offsetHeight;\n        document.body.removeChild(div);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {assign} from '../../obj.js';\nimport {compose as composeTransform, makeInverse} from '../../transform.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {createTransformString} from '../../render/canvas.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        let projection = viewState.projection;\n        if (!ENABLE_RASTER_REPROJECTION) {\n          const sourceProjection = imageSource.getProjection();\n          if (sourceProjection) {\n            projection = sourceProjection;\n          }\n        }\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image && this.loadImage(image)) {\n          this.image_ = image;\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const size = frameState.size;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    let width = Math.round(size[0] * pixelRatio);\n    let height = Math.round(size[1] * pixelRatio);\n    const rotation = viewState.rotation;\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersects(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dx = transform[4];\n    const dy = transform[5];\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    assign(context, this.getLayer().getSource().getContextOptions());\n    this.preRender(context, frameState);\n    if (dw >= 0.5 && dh >= 0.5) {\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = this.context.globalAlpha;\n        this.context.globalAlpha = opacity;\n      }\n      this.context.drawImage(\n        img,\n        0,\n        0,\n        +img.width,\n        +img.height,\n        Math.round(dx),\n        Math.round(dy),\n        Math.round(dw),\n        Math.round(dh)\n      );\n      if (opacity !== 1) {\n        this.context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {object=} opt_contextOptions Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    opt_contextOptions\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.contextOptions_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    if (this.resolutions_) {\n      const idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (\n          this.reprojectedRevision_ == this.getRevision() &&\n          equivalent(this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          equals(this.reprojectedImage_.getExtent(), extent)\n        ) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection,\n        projection,\n        extent,\n        resolution,\n        pixelRatio,\n        function (extent, resolution, pixelRatio) {\n          return this.getImageInternal(\n            extent,\n            resolution,\n            pixelRatio,\n            sourceProjection\n          );\n        }.bind(this),\n        this.contextOptions_\n      );\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image)\n        );\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image)\n        );\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image)\n        );\n        break;\n      default:\n      // pass\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  /**\n   * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n   * @api\n   */\n  CARMENTA_SERVER: 'carmentaserver',\n  /**\n   * HiDPI support for [GeoServer](https://geoserver.org/)\n   * @api\n   */\n  GEOSERVER: 'geoserver',\n  /**\n   * HiDPI support for [MapServer](https://mapserver.org/)\n   * @api\n   */\n  MAPSERVER: 'mapserver',\n  /**\n   * HiDPI support for [QGIS](https://qgis.org/)\n   * @api\n   */\n  QGIS: 'qgis',\n};\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options=} [opt_options] ImageWMS options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      attributions: options.attributions,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const requestWidth = Math.ceil(\n      (this.ratio_ * getWidth(extent)) / imageResolution\n    );\n    const requestHeight = Math.ceil(\n      (this.ratio_ * getHeight(extent)) / imageResolution\n    );\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*=} opt_element Element.\n   * @param {number=} opt_index The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>=} opt_array Array.\n   * @param {Options=} opt_options Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    this.originalEvent.preventDefault();\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    this.originalEvent.stopPropagation();\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends EventTarget {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.propagationStopped &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    if (\n      !this.originalPointerMoveEvent_ ||\n      this.originalPointerMoveEvent_.defaultPrevented\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions=} opt_options View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * Padding (in css pixels).\n     * If the map viewport is partially covered with other content (overlays) along\n     * its edges, this setting allows to shift the center of the viewport away from that\n     * content. The order of the values in the array is top, right, bottom, left.\n     * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n     * @type {Array<number>|undefined}\n     * @api\n     */\n    this.padding = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view shoud allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions=} opt_options Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n   * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number=} opt_duration The animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {\n  DEVICE_PIXEL_RATIO,\n  IMAGE_DECODE,\n  PASSIVE_EVENT_LISTENERS,\n} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    return this.getTargetElement()\n      ? this.getTargetElement().ownerDocument\n      : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target =\n        'host' in rootNode // ShadowRoot\n          ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(\n              originalEvent.clientX,\n              originalEvent.clientY\n            )\n          : /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget =\n            !IMAGE_DECODE && Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      const computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth']),\n      ]);\n    }\n\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options=} opt_options Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options=} opt_options Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options=} opt_options Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n   * @param {boolean=} opt_renderEdges Render reprojection edges.\n   * @param {object=} opt_contextOptions Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*=} opt_options Options (reserverd for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number=} opt_direction If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options=} opt_options XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options=} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {createTransformString} from '../../render/canvas.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n        }\n        this.renderedTiles.push(tile);\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","import \"ol/ol.css\";\nimport ImageLayer from \"ol/layer/Image\";\nimport ImageWMS from \"ol/source/ImageWMS\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport OSM from \"ol/source/OSM\";\nimport TileLayer from \"ol/layer/Tile\";\n\nvar basemap = new TileLayer({\n  source: new OSM()\n});\n\nvar wmsSourceF = new ImageWMS({\n  url:\n    \"https://mapservices.weather.noaa.gov:443/static/services/nws_reference_maps/USGS_Stream_Gauges/MapServer/WMSServer?\",\n  params: {\n    LAYERS: [\"0\"]\n  },\n  ratio: 1,\n  serverType: \"geoserver\",\n  crossOrigin: \"anonymous\"\n});\n\nvar NWMF = new ImageLayer({\n  minZoom: 1,\n  extent: [-15884991, 2270341, -5455066, 8338219],\n  source: wmsSourceF\n});\n\nvar view = new View({\n  center: [-10997148, 4569099],\n  zoom: 4\n});\n\nvar map = new Map({\n  layers: [basemap, NWMF],\n  target: \"map\",\n  view: view\n});\n\nmap.on(\"singleclick\", function (evt) {\n  /*document.getElementById(\"info\").innerHTML = \"\";*/\n  var viewResolution = /** @type {number} */ (view.getResolution());\n  var url = wmsSourceF.getFeatureInfoUrl(\n    evt.coordinate,\n    viewResolution,\n    \"EPSG:3857\",\n    { INFO_FORMAT: \"text/html\" }\n  );\n  if (url) {\n    fetch(url)\n      .then(function (response) {\n        return response.text();\n      })\n      .then(function (html) {\n        document.getElementById(\"info\").innerHTML = html;\n      });\n  }\n});\n\nmap.on(\"pointermove\", function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  var pixel = map.getEventPixel(evt.originalEvent);\n  var hit = map.forEachLayerAtPixel(pixel, function () {\n    return true;\n  });\n  map.getTargetElement().style.cursor = hit ? \"pointer\" : \"\";\n});\n"],"names":["$aeedce20e9577100$export$2e2bcd8739ae039","BaseEvent","type","this","propagationStopped","target","prototype","preventDefault","stopPropagation","$e881b5dca21eb5d4$export$2e2bcd8739ae039","$3273ed08087da3da$export$2e2bcd8739ae039","Disposable","disposed","dispose","disposeInternal","$b998d41b678ed5d1$export$4e734a3b32fb971b","a","b","$b998d41b678ed5d1$export$8a3786cc03fdb777","arr","direction","n","length","i","$b998d41b678ed5d1$export$8b58be045bf06082","data","extension","Array","isArray","$b998d41b678ed5d1$export$e9bab7fafb253603","arr1","arr2","len1","$013a1733c226ec50$export$22e23a2304399231","$013a1733c226ec50$export$8f11cee4bdc7e668","$013a1733c226ec50$export$1cd1943b3a73bbe8","$beaefe87199bb537$export$e6e34fd1f2686227","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$beaefe87199bb537$export$42ffd38884aecdac","object","property","$beaefe87199bb537$export$a5c4301012ad6f07","values","push","$beaefe87199bb537$export$dd1bc94b04021eeb","$08c28d22c0cb5a39$export$2e2bcd8739ae039","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$08c28d22c0cb5a39$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$294047c5e65f31a3$export$2e2bcd8739ae039","$d5bf8abd656a3cdc$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$d5bf8abd656a3cdc$export$8d2a95bc11b44725","$d5bf8abd656a3cdc$export$b0a21c8b3c1c921","$1f093ab5083c8a1f$export$b7ef3f8527533384","$1f093ab5083c8a1f$export$2e2bcd8739ae039","Observable","revision_","$1f093ab5083c8a1f$var$__extends","changed","getRevision","on","len","once","ol_key","un","$08c28d22c0cb5a39$exports","default","$6c5e11070e371322$export$817eb92a8194bab0","Error","$6c5e11070e371322$var$uidCounter_","$6c5e11070e371322$export$5e82334337e0f204","obj","ol_uid","String","$b68b3d6e32e3074a$export$cf395d7c4a2d5a17","oldValue","$b68b3d6e32e3074a$var$__extends","$b68b3d6e32e3074a$var$BaseObject","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","$b68b3d6e32e3074a$export$1ae67e5877b1d378","set","opt_silent","applyProperties","unset","$1f093ab5083c8a1f$exports","$b68b3d6e32e3074a$var$changeEventTypeCache","$b68b3d6e32e3074a$export$2e2bcd8739ae039","$f6d1853b3fcae320$export$2e2bcd8739ae039","$40658b5e833b516b$export$2e2bcd8739ae039","AssertionError","code","message","split","name","$40658b5e833b516b$var$__extends","$35d5ec884318008e$export$a7a9523472993e97","assertion","errorCode","$40658b5e833b516b$exports","$6b000a049d919fe5$export$7d15b64cf5a3a4c4","min","max","Math","$6b000a049d919fe5$export$2e2fd1ad24e4d350","cosh","x","y","exp","$6b000a049d919fe5$export$b9fae0bba9d9094d","log2","log","LOG2E","$6b000a049d919fe5$export$251bb0a9cef172e6","x1","y1","x2","y2","dx","dy","t","$6b000a049d919fe5$export$88e6ebb4fe54f538","$6b000a049d919fe5$export$56cb859c01fa134d","angleInRadians","PI","$6b000a049d919fe5$export$cba01ba138429a1d","angleInDegrees","$6b000a049d919fe5$export$ba467bec01d66def","r","$6b000a049d919fe5$export$3a89f8d6f6bf6c9f","$57c5f0299cb9b82f$export$2e2bcd8739ae039","BaseLayer","options","properties","opacity","visible","zIndex","maxResolution","Infinity","minResolution","minZoom","maxZoom","className_","className","state_","$57c5f0299cb9b82f$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","extent","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$b68b3d6e32e3074a$exports","$f5e92a4d985a2824$export$2e2bcd8739ae039","$98f5bfe3c4864f05$export$2e2bcd8739ae039","$534f30fce11effcd$export$acb1e9cb9ce4ca56","layerState","viewState","resolution","zoom","$534f30fce11effcd$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","getChangeEventType","handleSourcePropertyChange_","setSource","$534f30fce11effcd$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$57c5f0299cb9b82f$exports","$351df830ee0a9d9c$export$2e2bcd8739ae039","BaseImageLayer","opt_options","$351df830ee0a9d9c$var$__extends","$534f30fce11effcd$exports","$7eb75c96a6b6f2c6$export$2e2bcd8739ae039","$cb18cdefd702a327$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$cb18cdefd702a327$var$__extends","loadedTileCallback","tiles","tile","tileCoord","toString","createLoadedTileFinder","projection","tileRange","callback","forEachLoadedTile","forEachFeatureAtCoordinate","coordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","image","imageState","load","$b80dddceb0c42ad4$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$b80dddceb0c42ad4$var$__extends","$e22e7611e69f42a9$export$5635d7ef4b8fee1c","transform","$e22e7611e69f42a9$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$e22e7611e69f42a9$export$bd70ea2a93c0fa4","mat","det","c","d","e","f","$e22e7611e69f42a9$export$f84e8e69fd4488a5","join","$2f35615121725455$export$2e2bcd8739ae039","$dab4245bc22b806c$export$2e2bcd8739ae039","$6da4c8ed3074c92b$export$8aceca7c77505534","coordinates","$6da4c8ed3074c92b$export$fe201bb3bbe031e9","$6da4c8ed3074c92b$export$1f820e3920fa5715","$6da4c8ed3074c92b$export$cbe64c389534206f","$6da4c8ed3074c92b$export$ac68c24d37ca240f","$6da4c8ed3074c92b$export$805bdfd6d6690e97","$6da4c8ed3074c92b$export$be866b1e0809b17e","extent1","extent2","$6da4c8ed3074c92b$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","$6da4c8ed3074c92b$export$958e3e1a02eac4b6","opt_extent","$6da4c8ed3074c92b$export$3e2152b047719fa1","$6da4c8ed3074c92b$export$e9bab7fafb253603","$6da4c8ed3074c92b$export$795cd48be4d5f252","$6da4c8ed3074c92b$export$30570204156ffd18","flatCoordinates","offset","end","stride","$6da4c8ed3074c92b$export$f1dab130b92b85a9","$6da4c8ed3074c92b$export$f9ed8a3d123a08e2","val","$6da4c8ed3074c92b$export$8d09f5e2e1bf560d","$6da4c8ed3074c92b$export$e77c1cf70445e168","$6da4c8ed3074c92b$export$b84fa077c8b05295","$6da4c8ed3074c92b$export$cb1538b07e6964ff","$6da4c8ed3074c92b$export$520c40045967cb15","area","$6da4c8ed3074c92b$export$dd1bc94b04021eeb","$6da4c8ed3074c92b$export$3c49c185de0c2bfc","$6da4c8ed3074c92b$export$c08559766941f856","$6da4c8ed3074c92b$export$c91255cadecfe081","$6da4c8ed3074c92b$export$a1cfd206661d0801","corner","$6da4c8ed3074c92b$export$13ba650faf8308","center","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","$6da4c8ed3074c92b$export$72209efa88586d42","intersection","$6da4c8ed3074c92b$export$7b0a31e10bbff018","$6da4c8ed3074c92b$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","xs","ys","l","$6da4c8ed3074c92b$var$_boundingExtentXYs","$67c66761d21428d0$var$ua","navigator","userAgent","toLowerCase","$67c66761d21428d0$export$8442bdfd18b7b8a6","$67c66761d21428d0$export$39dfd62a25e0fe93","$67c66761d21428d0$export$76c0a3b101d93136","$67c66761d21428d0$export$6b83a0446fc26f94","devicePixelRatio","$67c66761d21428d0$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$67c66761d21428d0$export$716f8695eedb9bad","Image","decode","$67c66761d21428d0$export$f751ce96c6c4e4fc","passive","defineProperty","window","error","$075f937d7366f1a2$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","canvas","shift","document","createElement","getContext","$075f937d7366f1a2$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$075f937d7366f1a2$export$1d0aa160432dfea5","node","removeChild","$ce07df6d5d4656f1$var$fontRegEx","RegExp","$ce07df6d5d4656f1$var$fontRegExMatchIndex","$ce07df6d5d4656f1$export$5abde8a6aec4a131","fontSpec","match","style","lineHeight","weight","variant","families","family","$d4aabc5c971073f1$export$1d36981fcadac93b","setSize","console","warn","$d4aabc5c971073f1$var$measureFont","$d4aabc5c971073f1$var$measureContext","$d4aabc5c971073f1$export$7fdcec604f0b1fa7","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d4aabc5c971073f1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","$d4aabc5c971073f1$var$measureText","measureText","$d4aabc5c971073f1$export$8ac4d72be78047e6","offsetX","offsetY","translate","rotate","$d4aabc5c971073f1$var$createTransformStringCanvas","$d4aabc5c971073f1$export$e989e34b92d28568","$42152f52b26b6ca7$export$2e2bcd8739ae039","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","$42152f52b26b6ca7$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","position","appendChild","left","transformOrigin","clip","pixelRatio","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","save","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","event_1","$b80dddceb0c42ad4$exports","preRender","postRender","getRenderTransform","renderPixel","slice","layerExtent","pixelToCoordinateTransform","newCanvas","newContext","clearRect","drawImage","getImageData","err","Uint8Array","$cb18cdefd702a327$exports","$7d362782b4ccb93d$export$2e2bcd8739ae039","$03edbd434a9e6608$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$03edbd434a9e6608$export$1482081eec883108","$03edbd434a9e6608$export$2e2bcd8739ae039","$6dc418afeec7068a$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$84ad988f04807ab1$export$f3928063e5e96d35","$84ad988f04807ab1$export$21e6da8a7375dfe8","$84ad988f04807ab1$export$ae9d6ed80df710e5","$84ad988f04807ab1$export$d26945d1ad52feeb","tan","$84ad988f04807ab1$var$EPSG3857Projection","EPSG3857Projection","point","$84ad988f04807ab1$var$__extends","$84ad988f04807ab1$export$b508d7ad9a891c1b","$84ad988f04807ab1$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$84ad988f04807ab1$export$8c71322ec28ed6b4","atan","$b58ae362632b32c5$export$21e6da8a7375dfe8","$b58ae362632b32c5$export$1482081eec883108","$b58ae362632b32c5$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$b58ae362632b32c5$var$__extends","$b58ae362632b32c5$export$b508d7ad9a891c1b","$f5ec5c943d804ecb$var$cache","$11b5dd198626e1de$var$transforms","$11b5dd198626e1de$export$e16d8520af44a096","destination","sourceCode","destinationCode","$419865bd7211e6e7$export$2e2bcd8739ae039","$fb75384508533d8f$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$fb75384508533d8f$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$1bd0a226f9a16141$export$e9bab7fafb253603","coordinate1","coordinate2","$1bd0a226f9a16141$export$bb628a54ab399bc9","cosAngle","sinAngle","$1bd0a226f9a16141$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","projectionExtent","worldsAway","sourceExtentWidth","floor","$9c4744460e43e41b$export$dd516654c5f598fb","$9c4744460e43e41b$export$83e8ab53904f8022","$9c4744460e43e41b$export$59ae956cd3e343f7","$f5ec5c943d804ecb$export$e16d8520af44a096","$9c4744460e43e41b$export$3988ae62b71be9a3","projectionLike","replace","$9c4744460e43e41b$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$9c4744460e43e41b$export$e3c4995a701c26a3","vertices","$9c4744460e43e41b$export$eeb8392580a05a37","projections","forEach","$9c4744460e43e41b$export$638ad73f7aafb913","$9c4744460e43e41b$export$549167224996a0fb","defaultCode","$9c4744460e43e41b$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$11b5dd198626e1de$export$3988ae62b71be9a3","$9c4744460e43e41b$export$fce0c6cfca85ed96","$9c4744460e43e41b$export$51186ad6e864892a","$9c4744460e43e41b$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$9c4744460e43e41b$var$userProjection","$9c4744460e43e41b$export$698f563af1ba02a5","$9c4744460e43e41b$export$d4b8ec0b96db1ee2","destProjection","$9c4744460e43e41b$export$494be3a3a25689ca","$84ad988f04807ab1$exports","PROJECTIONS","$b58ae362632b32c5$exports","fromEPSG4326","toEPSG4326","$d08a3a38b8c630d8$export$2e2bcd8739ae039","CanvasImageLayerRenderer","imageLayer","image_","$d08a3a38b8c630d8$var$__extends","getImage","layerIndex","viewResolution","imageSource","hints","viewHints","renderedExtent","imageExtent","imageResolution","getResolution","imagePixelRatio","getPixelRatio","viewCenter","scale","size_1","canvasTransform","clipped","img","dw","dh","getContextOptions","previousAlpha","globalAlpha","restore","$42152f52b26b6ca7$exports","$14618f63634d34fc$export$2e2bcd8739ae039","ImageLayer","$14618f63634d34fc$var$__extends","$d08a3a38b8c630d8$exports","$351df830ee0a9d9c$exports","$1dd040dde677fb20$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$2b0a118af78fb031$var$brokenDiagonalRendering_","$5edd00bd92be9cf8$export$2e2bcd8739ae039","ImageBase","pixelRatio_","$5edd00bd92be9cf8$var$__extends","$6be53f6edfbf1854$export$2e2bcd8739ae039","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","ceil","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","abs","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","src","getTriangles","$2b0a118af78fb031$var$drawTestTriangle","ctx","u1","v1","u2","v2","closePath","fillRect","$2b0a118af78fb031$var$verifyBrokenDiagonalRendering","$2b0a118af78fb031$export$5fbb958059b7e71f","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$2b0a118af78fb031$export$b3890eb0ae9dca99","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","tmp","j","coef","k","m","$6b000a049d919fe5$export$8240f01c446270e6","fillStyle","$2b0a118af78fb031$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$22666d8766dd8ace$export$2e2bcd8739ae039","ReprojImage","getImageFunction","maxTargetExtent","limitedTargetExtent","sourceImage","sourcePixelRatio","triangulation_","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","contextOptions_","canvas_","sourceListenerKey_","$22666d8766dd8ace$var$__extends","unlistenSource_","getProjection","reproject_","sourceState1","$5edd00bd92be9cf8$exports","$ed6dc99f268f3882$var$adaptAttributions","attributionLike","$ed6dc99f268f3882$export$2e2bcd8739ae039","Source","projection_","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","loading","wrapX_","wrapX","$ed6dc99f268f3882$var$__extends","getAttributions","getAttributionsCollapsible","getResolutions","getWrapX","refresh","setAttributions","setState","$ff537d321d4e1584$export$4e0f6da20e5dcc4f","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","$ff537d321d4e1584$export$58d3276cd83daede","$ff537d321d4e1584$var$__extends","$ff537d321d4e1584$export$584f102f75ff44b3","$ff537d321d4e1584$export$2e2bcd8739ae039","ImageSource","resolutions_","resolutions","reprojectedImage_","reprojectedRevision_","imageSmoothing","findNearestResolution","idx","resolution1","pixelRatio1","$22666d8766dd8ace$exports","getImageInternal","handleImageChange","$ed6dc99f268f3882$exports","$b54439be79d4619a$export$bc96ecc7c2a50764","loadHandler","errorHandler","promise","listening_1","then","catch","listenerKeys","$b54439be79d4619a$export$2e2bcd8739ae039","ImageWrapper","crossOrigin","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$b54439be79d4619a$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$3756c58836984030$export$2e2bcd8739ae039","$60db182c0252e220$export$c202e3cb8db99a95","uri","params","keyParams","encodeURIComponent","qs","$481c7fd2f8a9fd17$var$GETFEATUREINFO_IMAGE_SIZE","$481c7fd2f8a9fd17$export$2e2bcd8739ae039","ImageWMS","crossOrigin_","url_","url","$ff537d321d4e1584$exports","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","serverType","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","$481c7fd2f8a9fd17$var$__extends","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","VERSION","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getLegendUrl","layers","LAYERS","mpu","getParams","viewExtent","requestExtent","$b54439be79d4619a$exports","getImageLoadFunction","dpi","bbox","substr","getUrl","setImageLoadFunction","setUrl","updateParams","version","s1","s2","n1","parseInt","n2","$ff7180bdd45ebb19$export$66e1c0999abad646","$322346e1ff7894ca$var$HEX_COLOR_RE_","$322346e1ff7894ca$var$NAMED_COLOR_RE_","$322346e1ff7894ca$export$590567be997858b6","color","g","$322346e1ff7894ca$export$f84e8e69fd4488a5","$322346e1ff7894ca$var$fromNamed","el","body","rgb","getComputedStyle","cache","cacheSize","$322346e1ff7894ca$export$a3295358bff77e","$f351daabfe6e2d22$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","$f351daabfe6e2d22$var$getKey","maxCacheSize","$f351daabfe6e2d22$export$747ccdf771a87ab8","$b370ab32454a96fd$var$expireIconCache","$b370ab32454a96fd$export$2e2bcd8739ae039","MapRenderer","map_","$b370ab32454a96fd$var$__extends","dispatchRenderEvent","calculateMatrices2D","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","worldWidth","$1bd0a226f9a16141$export$39a9ce3624977b84","offsets","layerStates","numLayers","tmpCoord","i1","layer1","inView","callback_1","order","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$fa78c97693b12120$export$2e2bcd8739ae039","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$ce07df6d5d4656f1$export$1afde3d6e16a7b29","getViewport","insertBefore","firstChild","children_","renderedVisible_","$fa78c97693b12120$var$__extends","declutterLayers","previousElement","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$075f937d7366f1a2$export$caeacfe04f52533a","display","$b370ab32454a96fd$exports","$161dd067fe2d672c$export$2e2bcd8739ae039","$931ffc4e747c14db$var$Property","$931ffc4e747c14db$export$a87ae6eb2761ec6d","opt_element","opt_index","$931ffc4e747c14db$var$__extends","$931ffc4e747c14db$export$2e2bcd8739ae039","Collection","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$0b703156bb914e6f$var$Property","$0b703156bb914e6f$export$2e2bcd8739ae039","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$931ffc4e747c14db$exports","setLayers","$0b703156bb914e6f$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$3a171922c3a0c5ed$export$2e2bcd8739ae039","MapEvent","$3a171922c3a0c5ed$var$__extends","$a1b91f073c6a6c43$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$a1b91f073c6a6c43$var$__extends","getEventPixel","getCoordinateFromPixel","$3a171922c3a0c5ed$exports","$150f412a4a7fa263$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$d564567e31203d44$export$2e2bcd8739ae039","$6085d006f9d0efe2$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$6085d006f9d0efe2$var$__extends","emulateClick_","pointerEvent","newEvent1","$a1b91f073c6a6c43$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","clientX","clientY","$e4ad75f913b6f7ff$export$2e2bcd8739ae039","$07fa325567004bb7$export$2e2bcd8739ae039","$716c6804ea170b71$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$b8291d9739c3c64e$export$2e2bcd8739ae039","$4c51fd53052a6bbc$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$4c51fd53052a6bbc$var$__extends","added","getTilesLoading","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","$4c51fd53052a6bbc$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","$d35baefbe89be4c5$export$2e2bcd8739ae039","$b21a6e049949bb31$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","$b21a6e049949bb31$export$f883a24d5edde77c","$bac43a1f4a628548$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$bac43a1f4a628548$var$getSmoothClampedResolution","$bac43a1f4a628548$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$d65f0a322291d127$export$e20fbacbb41798b","$d65f0a322291d127$export$f883a24d5edde77c","$c7ccf7e681a9b333$export$929e5a82286172a6","pow","$c7ccf7e681a9b333$export$57636bb43b1ccbb0","$c7ccf7e681a9b333$export$9b47139b511b56e4","$c7ccf7e681a9b333$export$45db2fc2f15997e7","$42282ac5c8474df1$export$2e2bcd8739ae039","$14c6e714516e527b$export$b92b2dedcfff79de","opt_dest","dest","$50db89a00eb954f6$var$tmpTransform","$50db89a00eb954f6$export$2e2bcd8739ae039","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$50db89a00eb954f6$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$6da4c8ed3074c92b$export$6a4fe494c558c238","anchor","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$c76e993e57efc8c4$export$6af0c1b4a8549a43","layout","$c76e993e57efc8c4$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$c76e993e57efc8c4$export$2e2bcd8739ae039","SimpleGeometry","$c76e993e57efc8c4$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$c76e993e57efc8c4$var$getLayoutForStride","anchorX","anchorY","$14c6e714516e527b$export$bb628a54ab399bc9","$14c6e714516e527b$export$dcdf75081b88279d","$14c6e714516e527b$export$d73ee8ef04f5226a","$50db89a00eb954f6$exports","$bf5604c1b8258b71$var$assignClosest","offset1","offset2","$bf5604c1b8258b71$export$bc2eb611ddf80103","squaredDelta","$bf5604c1b8258b71$export$fbf31c8f2668ed5a","ends","$bf5604c1b8258b71$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$bf5604c1b8258b71$export$5a48a0eefcf14992","$6b086aa46281540d$export$5c4daf67e03c190f","$6b086aa46281540d$export$47c3746a74384d45","coordinatess","opt_ends","jj","$8780aae6970f5f65$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$8780aae6970f5f65$export$51a0620f7a28532b","$8780aae6970f5f65$export$b84e8d2c4920a0c6","$8780aae6970f5f65$export$60a9904b67f8d51b","simplifiedEnds","$5454470599558ddd$export$9c0934e4e9c3f61e","opt_coordinates","$5454470599558ddd$export$cbb9596fc0f40db2","opt_coordinatess","$01ff26a2f986a1d0$export$3c5e1905f889266e","twiceArea","$01ff26a2f986a1d0$export$7a8ee541dfdf2ed5","$548636579b4087f2$export$2e2bcd8739ae039","LinearRing","maxDelta_","maxDeltaRevision_","$548636579b4087f2$var$__extends","getArea","$c76e993e57efc8c4$exports","$6eced4c969949f6b$export$2e2bcd8739ae039","Point","$6eced4c969949f6b$var$__extends","$6b086aa46281540d$export$60815ead40ec79ab","$239aa88e7a573859$export$cedabedc7ac0e138","$239aa88e7a573859$export$949a7a3a4b6f34fa","wn","$239aa88e7a573859$export$ae868c0f6acc3355","$2166f19777f69377$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$acee589e5b390c5c$export$40d8d71841a3d779","coordinatesExtent","ret","point1","point2","$3e64078bffae1cbd$export$4b80e395e36b5a56","start","startRel","endRel","startX","startY","endX","endY","slope","$6da4c8ed3074c92b$export$a6a5a7a461419425","$acee589e5b390c5c$export$76dcd8f8f83b6ddb","$acee589e5b390c5c$export$830a0dafbb2ef1c5","$155dc783a4ec227e$export$741858880c96b18c","$7892dc06ffd23218$export$318f2842ed17e094","edge","$7892dc06ffd23218$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$7892dc06ffd23218$export$b71b604ddfc778c7","$40aa8d43bbe572bf$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$40aa8d43bbe572bf$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$6eced4c969949f6b$exports","getLinearRingCount","getLinearRing","$548636579b4087f2$exports","getLinearRings","linearRings","$40aa8d43bbe572bf$export$2e2bcd8739ae039","$40aa8d43bbe572bf$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$40aa8d43bbe572bf$export$c16b671815801c75","$40aa8d43bbe572bf$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$40aa8d43bbe572bf$export$87d6a1539a56e47f","getRadius","startAngle","$70364d0195659942$var$animationCallback","returnValue","$70364d0195659942$export$964345001ee9ac52","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$70364d0195659942$export$c68d65f9148da196","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainResolution","capped","z","$bac43a1f4a628548$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$bac43a1f4a628548$export$22ac0f6b219de91a","constraint","$70364d0195659942$export$4eeaa08dd550e3c0","theta","opt_tolerance","enableRotation","constrainRotation","$70364d0195659942$export$ee75376562060184","animation","sourceRotation","targetRotation","$70364d0195659942$var$calculateCenterOn","rotX","rotY","$70364d0195659942$export$2e2bcd8739ae039","View","hints_","animations_","updateAnimationKey_","viewportSize_","targetCenter_","targetRotation_","cancelAnchor_","applyOptions_","$70364d0195659942$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","$9c4744460e43e41b$export$96bfd09e2cffb006","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","nearest","baseLevel","fit","geometryOrExtent","$40aa8d43bbe572bf$exports","fromExtent","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$cc435a5409103773$export$a71a825ff42fb8e1","$cceb59c4bc2a46b0$export$2e2bcd8739ae039","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$0b703156bb914e6f$exports","view","$70364d0195659942$exports","$cceb59c4bc2a46b0$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$4c51fd53052a6bbc$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","$cceb59c4bc2a46b0$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","lowOnFrameBudget","time","targetElement","$6085d006f9d0efe2$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","$cc435a5409103773$export$622c471beb1693c7","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","offsetHeight","$b978dafe8f7d27ff$export$2e2bcd8739ae039","Control","target_","$b978dafe8f7d27ff$var$__extends","mapEvent","$6a26ab11104d2c24$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$6a26ab11104d2c24$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","lastChild","$075f937d7366f1a2$export$1e1c9bf5a4ffe0d1","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$b978dafe8f7d27ff$exports","$a305cff1f91b3b86$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$a305cff1f91b3b86$var$__extends","resetNorth_","$4901e3e27e30416a$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$4901e3e27e30416a$var$__extends","zoomByDelta_","currentZoom","newZoom","$2c9e42723ccf2bfb$export$2e2bcd8739ae039","$39210df8527e63e5$export$4c486572e961a974","$39210df8527e63e5$export$ace321ff2a8016ef","$39210df8527e63e5$export$2e2bcd8739ae039","Interaction","setActive","$39210df8527e63e5$var$__extends","active","$b50403621294a654$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$b50403621294a654$var$__extends","stopEvent","shiftKey","$39210df8527e63e5$exports","zoomByDelta","$cf1eb502962d87a8$export$e2a20c553f6c85ce","$cf1eb502962d87a8$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$cf1eb502962d87a8$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$cf1eb502962d87a8$var$isPointerDraggingEvent","$edf87b50170125f7$export$84bf76cd7afc7469","conditions","pass","$edf87b50170125f7$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$edf87b50170125f7$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$edf87b50170125f7$export$d7ddd398f22d79ef","$edf87b50170125f7$export$ba9e5d519bc326ca","$edf87b50170125f7$export$1238ad6b5e7fff70","$edf87b50170125f7$export$fdc892d0d8fe3bfb","$edf87b50170125f7$export$5d31fe68a477cfbb","$edf87b50170125f7$export$e5570ca80cd8fd54","tagName","$edf87b50170125f7$export$abb7acbfa76bf3c4","pointerType","$edf87b50170125f7$export$189f0d593022b199","isPrimary","$c11585da26a016db$var$DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$c11585da26a016db$var$__extends","centroid","$cf1eb502962d87a8$exports","update","$1bd0a226f9a16141$export$dcdf75081b88279d","begin","getDistance","getAngle","centerpx","$c11585da26a016db$export$2e2bcd8739ae039","$197c7092261b2aa0$export$2e2bcd8739ae039","DragRotate","lastAngle_","$197c7092261b2aa0$var$__extends","$c47adf75308683a6$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$c47adf75308683a6$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$e05f414bc3918235$var$DragBoxEventType","$e05f414bc3918235$export$7053c33c051365ea","$e05f414bc3918235$var$__extends","$e05f414bc3918235$export$2e2bcd8739ae039","DragBox","box_","$c47adf75308683a6$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$afc7f51010a5b660$export$2e2bcd8739ae039","DragZoom","out_","out","$afc7f51010a5b660$var$__extends","mapExtent","boxPixelExtent","$6da4c8ed3074c92b$export$80cbab86674143b6","$e05f414bc3918235$exports","$82662515908d12f9$export$2e2bcd8739ae039","$178bb1517d626802$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$178bb1517d626802$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$2237fabfa170eefc$export$2e2bcd8739ae039","KeyboardZoom","$2237fabfa170eefc$var$__extends","charCode","charCodeAt","$9a54ea8d5f7a49ee$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$aaa378764710d71e$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$aaa378764710d71e$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$aaa378764710d71e$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$9727451f2459496c$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$9727451f2459496c$var$__extends","rotationDelta","touch0","touch1","$79c946b60b88d4a6$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$79c946b60b88d4a6$var$__extends","scaleDelta","$41aa29ae0c4b607a$export$2e2bcd8739ae039","Map","$4901e3e27e30416a$exports","zoomOptions","$a305cff1f91b3b86$exports","rotateOptions","attribution","$6a26ab11104d2c24$exports","attributionOptions","$b4471d80e1d69273$export$ebe90cb607ad99e","altShiftDragRotate","$197c7092261b2aa0$exports","doubleClickZoom","$b50403621294a654$exports","zoomDelta","zoomDuration","dragPan","$c11585da26a016db$exports","pinchRotate","$9727451f2459496c$exports","pinchZoom","$79c946b60b88d4a6$exports","keyboard","$178bb1517d626802$exports","$2237fabfa170eefc$exports","mouseWheelZoom","$aaa378764710d71e$exports","shiftDragZoom","$afc7f51010a5b660$exports","$fdc8b40501c0cf45$export$ebe90cb607ad99e","$41aa29ae0c4b607a$var$__extends","$fa78c97693b12120$exports","$cceb59c4bc2a46b0$exports","$0f235d2d04095c6e$export$2e2bcd8739ae039","Tile","interimTile","transition_","transition","transitionStarts_","$0f235d2d04095c6e$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","$cd3bc8d185522361$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","tileLoadFunction_","$cd3bc8d185522361$var$__extends","naturalWidth","naturalHeight","listenImage","$0f235d2d04095c6e$exports","$398e350e33050c07$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","sourceProjExtent","$2b0a118af78fb031$export$16d356211d01f1cc","errorThresholdInPixels","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$398e350e33050c07$var$__extends","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$859b1614288c6316$export$2e2bcd8739ae039","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$bf2a04496fadabc6$export$958e3e1a02eac4b6","opt_tileCoord","$bf2a04496fadabc6$export$92d0df0f1d25c63c","$bf2a04496fadabc6$export$a47fb462a08de82f","$a12e09565a34db59$export$2e2bcd8739ae039","TileCache","$a12e09565a34db59$var$__extends","expireCache","pruneExceptNewestZ","Number","$bf2a04496fadabc6$export$a807b7874eb66454","$7e3d7a0f8b272861$export$2e2bcd8739ae039","$550e524b0d1b61d4$var$TileRange","TileRange","containsTileRange","equals","getHeight","getWidth","intersects","$550e524b0d1b61d4$export$958e3e1a02eac4b6","$550e524b0d1b61d4$export$2e2bcd8739ae039","$bb602a307ef98bb5$var$tmpTileCoord","$bb602a307ef98bb5$export$2e2bcd8739ae039","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$5779655d81caea04$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$5779655d81caea04$var$resolutionsFromExtent","$5779655d81caea04$export$ce88871416242df8","$5779655d81caea04$export$7b5b6ef8fd55fac4","$5779655d81caea04$export$a251b12f5601c16f","opt_maxResolution","half","$988a11d09320f6a8$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$a12e09565a34db59$exports","tmpSize","tileOptions","zDirection","$988a11d09320f6a8$var$__extends","getTileCacheForProjection","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","$5779655d81caea04$export$39a9ce3624977b84","$bf2a04496fadabc6$export$60bedf8e3e3c3dbe","updateCacheSize","tileCount","useTile","$988a11d09320f6a8$export$c571855c51e6c4b6","$988a11d09320f6a8$export$2e2bcd8739ae039","$91dd08a0f5859882$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$91dd08a0f5859882$export$436f44dbcc31fea3","templates","tileUrlFunctions","$bf2a04496fadabc6$export$d6af199866bfb566","$91dd08a0f5859882$export$4229b1d9af69b3be","$e6408236331c2614$export$2e2bcd8739ae039","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$e6408236331c2614$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","$988a11d09320f6a8$exports","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","exec","startCharCode","stopCharCode","fromCharCode","stop_1","$91dd08a0f5859882$export$2a1fa079bfd73dde","$51d055913ca55b5e$var$TileImage","TileImage","$51d055913ca55b5e$var$defaultTileLoadFunction","tileClass","$cd3bc8d185522361$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$51d055913ca55b5e$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","newTile","$398e350e33050c07$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$e6408236331c2614$exports","imageTile","$51d055913ca55b5e$export$2e2bcd8739ae039","$963a7ef65488964c$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$5779655d81caea04$export$38500bbeccc864ff","$963a7ef65488964c$var$__extends","$51d055913ca55b5e$exports","$6c8498cc816f2362$export$4de8a5e77eb994ad","$6c8498cc816f2362$export$2e2bcd8739ae039","OSM","$6c8498cc816f2362$var$__extends","$963a7ef65488964c$exports","$e4c61536de922b84$export$2e2bcd8739ae039","$93be2de6a052f587$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$93be2de6a052f587$var$__extends","getPreload","getUseInterimTilesOnError","$02fffef185f4339b$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$02fffef185f4339b$var$__extends","isDrawableTile","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","i_1","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alpha","alphaChanged","frameState1","tileSource1","postRenderFunction","opt_tileCallback","$02fffef185f4339b$export$2e2bcd8739ae039","$32e67a4d3559554a$export$2e2bcd8739ae039","TileLayer","$32e67a4d3559554a$var$__extends","$02fffef185f4339b$exports","$93be2de6a052f587$exports","$efd3ba4ec2608b1d$var$basemap","$32e67a4d3559554a$exports","$6c8498cc816f2362$exports","$efd3ba4ec2608b1d$var$wmsSourceF","$481c7fd2f8a9fd17$exports","$efd3ba4ec2608b1d$var$NWMF","$14618f63634d34fc$exports","$efd3ba4ec2608b1d$var$view","$efd3ba4ec2608b1d$var$map","$41aa29ae0c4b607a$exports","INFO_FORMAT","fetch","response","html","hit","cursor"],"version":3,"file":"index.82505076.js.map"}